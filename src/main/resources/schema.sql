DROP TABLE IF EXISTS `film_user_likes` CASCADE;
DROP TABLE IF EXISTS `ratings` CASCADE;
DROP TABLE IF EXISTS `genres` CASCADE ;
DROP TABLE IF EXISTS `user_friends` CASCADE;
DROP TABLE IF EXISTS `films` CASCADE;
DROP TABLE IF EXISTS `users` CASCADE;
DROP TABLE IF EXISTS `film_genres` CASCADE;

CREATE TABLE IF NOT EXISTS users
(
    user_id   INTEGER  PRIMARY KEY AUTO_INCREMENT,
    login     VARCHAR(30) UNIQUE NOT NULL,
    user_name VARCHAR(30) UNIQUE NOT NULL,
    birthday  DATE NOT NULL,
    email     VARCHAR(50)
);


CREATE TABLE IF NOT EXISTS user_friends
(
    friendship_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id       INTEGER REFERENCES users (user_id) ON DELETE RESTRICT ON UPDATE CASCADE,
    friend_id     INTEGER REFERENCES users (user_id) ON DELETE RESTRICT ON UPDATE CASCADE,
    status        varchar (10) NOT NULL
);
--
-- CREATE TABLE IF NOT EXISTS friend_requests
-- (
--     request_id  BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
--     sender_id   INTEGER REFERENCES users (user_id) ON DELETE RESTRICT ON UPDATE CASCADE,
--     receiver_id INTEGER REFERENCES users (user_id) ON DELETE RESTRICT ON UPDATE CASCADE,
--     status
-- --created_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
-- );

CREATE TABLE IF NOT EXISTS genres
(
    genre_id   INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name VARCHAR
);

CREATE TABLE IF NOT EXISTS ratings
(
    rating_id   INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    rating_name VARCHAR
);
CREATE TABLE IF NOT EXISTS films
(
    film_id     INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_name   VARCHAR,
    description VARCHAR(200),
    relise_date DATE,
    duration    INTEGER,
    rating_id   INTEGER REFERENCES ratings (rating_id) ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS film_user_likes
(
    like_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id INTEGER REFERENCES films (film_id) ON DELETE RESTRICT ON UPDATE CASCADE,
    user_id INTEGER REFERENCES users (user_id) ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS film_genres
(
    id       INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id  INTEGER REFERENCES films (film_id) ON DELETE RESTRICT ON UPDATE CASCADE,
    genre_id INTEGER REFERENCES genres (genre_id) ON DELETE RESTRICT ON UPDATE CASCADE
);



